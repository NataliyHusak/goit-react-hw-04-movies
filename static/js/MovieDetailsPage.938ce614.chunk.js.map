{"version":3,"sources":["components/MoviesDetail/MoviesDetail.jsx","servises/api.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/index.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/nanoid/format.browser.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","components/MoviesDetail/MoviesDetail.module.css"],"names":["MovieDetailsPage","state","data","goBack","props","history","id","this","match","params","API","then","setState","catch","error","Error","text","className","styles","section","btn","type","onClick","row","col","poster","src","poster_path","alt","title","original_title","score","vote_average","overview","subTitle","genres","list","length","map","i","key","shortId","generate","name","navInfo","item","to","replace","link","activeClassName","active","fallback","path","routers","CAST_PAGE","exact","component","REVIEWS_PAGE","Component","require","config","API_BASE_URL","API_KEY","getMoviesTrending","mediaType","timeWindow","Axios","get","getMoviesId","getMoviesQuery","query","getMoviesCredits","getMoviesReviews","alphabet","previousSeed","shuffled","randomFromSeed","ORIGINAL","reset","setCharacters","_alphabet_","unique","split","filter","ind","arr","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","push","splice","shuffle","module","exports","characters","seed","lookup","index","build","isValid","clusterWorkerId","seedValue","worker","workerId","newCharacters","undefined","_seed_","counter","previousSeconds","str","seconds","Date","now","random","format","number","done","loopCounter","pow","randomByte","crypto","window","msCrypto","getRandomValues","size","Uint8Array","bytes","mask","log","LN2","step","RegExp","test"],"mappings":"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","file":"static/js/MovieDetailsPage.938ce614.chunk.js","sourcesContent":["import React, { Component, Suspense } from \"react\";\r\nimport { Switch, Route, NavLink } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport shortId from \"shortid\";\r\nimport routers from \"../../pages/pages\";\r\nimport * as API from \"../../servises/api\";\r\nimport styles from \"./MoviesDetail.module.css\";\r\n\r\nexport default class MovieDetailsPage extends Component {\r\n  static propTypes = {\r\n    history: PropTypes.shape({\r\n      goBack: PropTypes.func.isRequired,\r\n      replace: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    match: PropTypes.shape({\r\n      params: PropTypes.shape({\r\n        id: PropTypes.string\r\n      })\r\n    }).isRequired\r\n  };\r\n\r\n  state = {\r\n    data: {}\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { match } = this.props;\r\n    const { id } = match.params;\r\n    API.getMoviesId(id)\r\n      .then(({ data }) => {\r\n        this.setState({ data });\r\n      })\r\n      .catch(error => {\r\n        Error({\r\n          text: error\r\n        });\r\n      });\r\n  }\r\n\r\n  goBack = () => {\r\n    const { history } = this.props;\r\n    history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { data } = this.state;\r\n    return (\r\n      <>\r\n        {data.id && (\r\n          <div className={styles.section}>\r\n            <button className={styles.btn} type=\"button\" onClick={this.goBack}>\r\n              Go back\r\n            </button>\r\n            <div className={styles.row}>\r\n              <div className={styles.col}>\r\n                <img\r\n                  className={styles.poster}\r\n                  src={`https://image.tmdb.org/t/p/w500${data.poster_path}`}\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n              <div className={styles.col}>\r\n                <h3 className={styles.title}>{data.original_title}</h3>\r\n                <span className={styles.score}>\r\n                  User Score: {data.vote_average}\r\n                </span>\r\n                <div className={styles.overview}>\r\n                  <h4 className={styles.subTitle}>Overview</h4>\r\n                  <p className={styles.text}>{data.overview}</p>\r\n                </div>\r\n                <div className={styles.genres}>\r\n                  <h4 className={styles.subTitle}>Genres</h4>\r\n                  <ul className={styles.list}>\r\n                    {data.genres &&\r\n                      data.genres.length > 0 &&\r\n                      data.genres.map(i => (\r\n                        <li key={shortId.generate()}>{i.name}</li>\r\n                      ))}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <h4 className={styles.title}>Aditional information</h4>\r\n              <ul className={styles.navInfo}>\r\n                <li className={styles.item}>\r\n                  <NavLink\r\n                    to={`/movies/${data.id}/cast`}\r\n                    replace\r\n                    className={styles.link}\r\n                    activeClassName={styles.active}\r\n                  >\r\n                    Cast\r\n                  </NavLink>\r\n                </li>\r\n                <li className={styles.item}>\r\n                  <NavLink\r\n                    to={`/movies/${data.id}/reviews`}\r\n                    replace\r\n                    className={styles.link}\r\n                    activeClassName={styles.active}\r\n                  >\r\n                    Reviews\r\n                  </NavLink>\r\n                </li>\r\n              </ul>\r\n              <Suspense fallback={<div>...Loading...</div>}>\r\n                <Switch>\r\n                  <Route\r\n                    path={routers.CAST_PAGE.path}\r\n                    exact\r\n                    component={routers.CAST_PAGE.component}\r\n                  />\r\n                  <Route\r\n                    path={routers.REVIEWS_PAGE.path}\r\n                    exact\r\n                    component={routers.REVIEWS_PAGE.component}\r\n                  />\r\n                </Switch>\r\n              </Suspense>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import Axios from \"axios\";\r\n\r\nrequire(\"dotenv\").config();\r\n\r\nconst API_BASE_URL = \"https://api.themoviedb.org/3/\";\r\n\r\nconst API_KEY = \"6b99ab3893b7ab7cc1f5e941cef2fb78\";\r\n\r\nexport const getMoviesTrending = (mediaType = \"all\", timeWindow = \"day\") => {\r\n  return Axios.get(\r\n    `${API_BASE_URL}trending/${mediaType}/${timeWindow}?api_key=${API_KEY}`\r\n  );\r\n};\r\n\r\nexport const getMoviesId = id => {\r\n  return Axios.get(`${API_BASE_URL}movie/${id}?api_key=${API_KEY}`);\r\n};\r\n\r\nexport const getMoviesQuery = query => {\r\n  return Axios.get(\r\n    `${API_BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\r\n  );\r\n};\r\n\r\nexport const getMoviesCredits = id => {\r\n  return Axios.get(`${API_BASE_URL}movie/${id}/credits?api_key=${API_KEY}`);\r\n};\r\n\r\nexport const getMoviesReviews = id => {\r\n  return Axios.get(`${API_BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`);\r\n};\r\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nmodule.exports = 0;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"MoviesDetail_section__18RU-\",\"btn\":\"MoviesDetail_btn__3FffU\",\"row\":\"MoviesDetail_row__1lm0u\",\"col\":\"MoviesDetail_col__1VGOD\",\"poster\":\"MoviesDetail_poster__2YjEH\",\"title\":\"MoviesDetail_title__3LcnB\",\"score\":\"MoviesDetail_score__1QK49\",\"overview\":\"MoviesDetail_overview__2MciA\",\"subTitle\":\"MoviesDetail_subTitle__B_5K7\",\"text\":\"MoviesDetail_text__3JrKT\",\"genres\":\"MoviesDetail_genres__2WSdp\",\"list\":\"MoviesDetail_list__39qOa\",\"navInfo\":\"MoviesDetail_navInfo__Og4xP\",\"item\":\"MoviesDetail_item__1c5zg\",\"link\":\"MoviesDetail_link__JhYtw\",\"active\":\"MoviesDetail_active__ND6Bq\"};"],"sourceRoot":""}